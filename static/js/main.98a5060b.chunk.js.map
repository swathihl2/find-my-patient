{"version":3,"sources":["firebase/instance.js","helpers/LoginHelpers.js","components/login.js","components/signup.js","containers/index.js","helpers/PatientInformation.js","components/Patient/addPatient.js","components/Patient/HomeContent.js","components/Patient/updatePatient.js","components/Patient/home.js","NotFound.js","error.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","error","nameTag","password","Login","handleChange","navigate","useNavigate","useState","passwordStyle","setPasswordStyle","nameStyle","setNameStyle","success","setSuccess","remember","setRemember","localStorage","getItem","setPassword","userName","setUserName","flag","Grid","Paper","style","padding","width","margin","align","Avatar","backgroundColor","className","TextField","label","placeholder","value","name","fullWidth","onChange","e","target","required","type","FormControlLabel","control","Checkbox","Button","onClick","length","color","Number","isNaN","instance","get","then","resopnse","i","data","setItem","document","getElementById","backgroundImage","catch","colSpan","textAlign","fontSize","variant","Typography","Link","href","Signup","agreeStyle","setAgreeStyle","phoneStyle","setPhoneStyle","agree","setAgree","passwordSecondInput","setPasswordSecondInpu","phone","setPhone","handlePost","Data","preventDefault","post","Onsubmit","gutterBottom","checked","event","SignInOutContainer","opacity","setValue","newValue","TabPanel","props","children","index","other","role","hidden","id","aria-labelledby","Box","elevation","Tabs","indicatorColor","textColor","aria-label","Tab","Bloods","Genders","AddPatient","DiseaseStyle","setDiseaseStyle","BloodStyle","setBloodStyle","GenderStyle","setGenderStyle","DOBStyle","setDOBStyle","Date","PatientDateOfBirth","setPatientDateOfBirth","PatientName","setPatientName","PatientPhone","setPatientPhone","Disease","setDisease","Address","setAddress","bloodGroup","setBlood","gender","setGender","boxShadow","utils","DateFnsUtils","format","date","showTodayButton","select","map","option","MenuItem","key","DateOfBirth","String","getDate","parseInt","getMonth","getFullYear","validate","HomeContent","PatientList","namelist","setNameList","searchText","setSearchText","updateForms","setUpdateForms","updateForm","res","status","split","day","month","year","ndate","defaultValue","handleBloodChange","handleGenderChange","put","response","alert","getLists","submitForm","listofname","j","delete","toLowerCase","includes","push","minHeight","action","removePatient","setFlag","height","PatientHome","patientForm","setPatientForm","Forms","undefined","window","location","rel","removeItem","NotFound","SomethinWentWrong","App","exact","path","element","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.98a5060b.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://find-my-patient-8370f-default-rtdb.firebaseio.com/',\n});\n","// eslint-disable-next-line\nexport const error = [{\r\n  nameTag: '',\n  password: '',\n}];\n","/* eslint-disable react/jsx-filename-extension,jsx-a11y/anchor-is-valid,react/forbid-dom-props */\nimport React, { useState } from 'react';\nimport {\n  Grid, Paper, Avatar, TextField, Button, Typography, Link,\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport instance from '../firebase/instance';\nimport { error } from '../helpers/LoginHelpers';\n\n/**\n * Loads Login Form\n * \n * @param {integer} handleChange represents to set a new state for the input.\n * @returns Login form content\n */\nconst Login = ({ handleChange }) => {\n  const navigate = useNavigate();\n  const paperStyle = { padding: 20, width: 300, margin: '0 auto' };\n  const avatarStyle = { backgroundColor: '#1bbd7e' };\n  const btnstyle = { margin: '8px 0' };\n  const [passwordStyle, setPasswordStyle] = useState();\n  const [nameStyle, setNameStyle] = useState();\n  const [success, setSuccess] = useState();\n  const [remember, setRemember] = useState(false);\n\n  const [password, setPassword] = useState(localStorage.getItem('password'));\n  const [userName, setUserName] = useState(localStorage.getItem('userName'));\n\n  let flag = 0;\n\n  const validate = () => {\n    if (userName.length < 3) {\n      error.nameTag = 'Invalid Name';\n    }\n    if (userName === '') {\n      setNameStyle(true);\n    } else if (userName.length < 3) {\n      setNameStyle(<div style={{ color: 'red' }}>Name must have atleast 3 characters</div>);\n    } else if (!Number.isNaN(Number(userName))) {\n      setNameStyle(<div style={{ color: 'red' }}>Name should not be a number</div>);\n    } else {\n      setNameStyle('');\n      flag = 1;\n    }\n    if (password === '') {\n      setPasswordStyle(true);\n    } else if (password.length < 6) {\n      setPasswordStyle(<div style={{ color: 'red' }}>Password must have atleast 6 characters</div>);\n    } else {\n      setPasswordStyle('');\n      flag += 1;\n    }\n    if (flag >= 2) {\n      instance.get('/results.json').then((resopnse) => {\n        for (const i in resopnse.data) {\n          if (resopnse.data[i].userName === userName && resopnse.data[i].password === password) {\n            setSuccess(<div style={{ color: 'green' }}>Successfully Logged </div>);\n            if (remember === true) {\n              localStorage.setItem('userName', userName);\n              localStorage.setItem('password', password);\n            } else {\n              localStorage.setItem('userName', '');\n              localStorage.setItem('password', '');\n            }\n            localStorage.setItem('PatientName', userName);\n            localStorage.setItem('PatientPassword', password);\n            document.getElementById('background-image').style.backgroundImage = '';\n            navigate('/patient');\n          }\n        }\n        setSuccess(<div style={{ color: 'red' }}>Invalid Username or Password</div>);\n      }).catch(() => {\n        setSuccess(<div colSpan={10} style={{ textAlign: 'center', color: 'red', fontSize: '20px' }}>Something went wrong!!!</div>);\n      });\n    } else {\n      setSuccess('');\n    }\n  };\n\n  return (\n    <Grid>\n      <Paper style={paperStyle}>\n        <Grid align=\"center\">\n          <Avatar style={avatarStyle}><LockOutlinedIcon /></Avatar>\n          <h2>Sign In</h2>\n        </Grid>\n        <div className=\"center\">{success}</div>\n        <TextField label=\"Username\" error={nameStyle} placeholder=\"Enter username\" value={userName} name=\"{userName}\" fullWidth onChange={(e) => { setUserName(e.target.value); }} required />\n        {nameStyle}\n        <TextField label=\"Password\" error={passwordStyle} placeholder=\"Enter password\" value={password} name=\"{password}\" onChange={(e) => { setPassword(e.target.value); }} type=\"password\" fullWidth required />\n        {passwordStyle}\n        <FormControlLabel\n          control={(\n            <Checkbox\n              name=\"checkedA\"\n              onChange={() => { setRemember(!(remember)); }}\n            />\n                      )}\n          label=\"Remember me\"\n        />\n        <Button onClick={() => { validate(); }} type=\"submit\" color=\"primary\" variant=\"contained\" style={btnstyle} fullWidth>Sign in</Button>\n        <Typography>\n          {' '}\n          Do you have an account ?\n          <Link href=\"#\" onClick={() => { handleChange('event', 1); }}>\n            Sign Up\n          </Link>\n        </Typography>\n      </Paper>\n    </Grid>\n  );\n};\n\nLogin.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","/* eslint-disable react/jsx-filename-extension,react/forbid-dom-props,react/forbid-component-props */\nimport React, { useState } from 'react';\nimport {\n  Grid, Paper, Avatar, Typography, TextField, Button,\n} from '@material-ui/core';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport instance from '../firebase/instance';\n\n/**\n * It loads SignUp form\n * \n * @returns SignUp form content\n */\n\nconst Signup = () => {\n  const paperStyle = { padding: 20, width: 300, margin: '0 auto' };\n  const headerStyle = { margin: 0 };\n  const avatarStyle = { backgroundColor: '#1bbd7e' };\n  const [nameStyle, setNameStyle] = useState();\n  const [agreeStyle, setAgreeStyle] = useState();\n  const [phoneStyle, setPhoneStyle] = useState();\n  const [passwordStyle, setPasswordStyle] = useState();\n  const [success, setSuccess] = useState();\n  const [agree, setAgree] = useState();\n\n  const [passwordSecondInput, setPasswordSecondInpu] = useState(null);\n  const [password, setPassword] = useState('');\n  const [userName, setUserName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  let flag = 0;\n\n  const handlePost = (e) => {\n    const Data = {\n      userName, password, phone,\n    };\n    if (flag <= 3) {\n      setAgreeStyle(<div style={{ color: 'red' }}>Please accept the terms & conditions</div>);\n    } else if (flag >= 4) {\n      if (agree === false) {\n        setAgreeStyle(<div style={{ color: 'red' }}>Please accept the terms & conditions</div>);\n      } else {\n        instance.get('/results.json').then((resopnse) => {\n          for (const i in resopnse.data) { // eslint-disable-line\n            if (resopnse.data[i].phone === phone) {\n              setSuccess(<div style={{ color: 'red' }}>User already exists  </div>);\n              e.preventDefault();\n              return;\n            }\n          }\n          instance.post('/results.json', Data).then(() => {\n            setSuccess(<div style={{ color: 'green' }}>Successfully Signed up </div>);\n          });\n        }).catch(() => {\n          setSuccess(<div colSpan={10} style={{ textAlign: 'center', color: 'red', fontSize: '20px' }}>Something went wrong!!!</div>);\n        });\n      }\n    } else {\n      setSuccess('');\n    }\n    if (agree) {\n      setAgreeStyle('');\n    }\n  };\n\n  const validate = (e) => {\n    e.preventDefault();\n    if (userName === '') {\n      setNameStyle(true);\n    } else if (userName.length < 3) {\n      setNameStyle(<div style={{ color: 'red' }}>Name must have atleast 3 characters</div>);\n    } else if (!Number.isNaN(Number(userName))) {\n      setNameStyle(<div style={{ color: 'red' }}>Name should not be a number</div>);\n    } else {\n      setNameStyle('');\n      flag = 1;\n    }\n    if (phone === '') {\n      setPhoneStyle(true);\n    } else if (phone.length !== 10) {\n      setPhoneStyle(<div style={{ color: 'red' }}>Please provide 10 digits phone number</div>);\n    } else if (Number.isNaN(Number(phone)) && phone.length === 10) {\n      setPhoneStyle(<div style={{ color: 'red' }}>Phone No.should be a number</div>);\n    } else {\n      setPhoneStyle('');\n      flag += 1;\n    }\n    if (password === '' || passwordSecondInput === '') {\n      setPasswordStyle(true);\n    } else if (password.length < 6) {\n      setPasswordStyle(<div style={{ color: 'red' }}>Password must have atleast 6 characters</div>);\n    } else if (password !== passwordSecondInput) {\n      setPasswordStyle(<div style={{ color: 'red' }}>Password is not matching</div>);\n    } else {\n      setPasswordStyle('');\n      flag += 1;\n    }\n    if (flag === 3 && agree === true) {\n      flag += 1;\n    }\n  };\n\n  return (\n    <Grid Onsubmit={handlePost}>\n      <Paper style={paperStyle}>\n        <Grid align=\"center\">\n          <Avatar style={avatarStyle}>\n            <AddCircleOutlineOutlinedIcon />\n          </Avatar>\n          <h2 style={headerStyle}>Sign Up</h2>\n          {success}\n          <Typography variant=\"caption\" gutterBottom>Please fill this form to create an account !</Typography>\n        </Grid>\n        <form>\n          <TextField fullWidth label=\"Name\" name=\"userName\" error={nameStyle} onChange={(e) => { setUserName(e.target.value); }} placeholder=\"Enter your name\" />\n          {nameStyle}\n          <TextField fullWidth label=\"Phone Number\" name=\"phone\" error={phoneStyle} onChange={(e) => { setPhone(e.target.value); }} placeholder=\"Enter your phone number\" />\n          {phoneStyle}\n          <TextField fullWidth label=\"Password\" name=\"password\" error={passwordStyle} onChange={(e) => { setPassword(e.target.value); }} placeholder=\"Enter your password\" type=\"password\" />\n          <TextField fullWidth label=\"Confirm Password\" name=\"passwordSecond\" error={passwordStyle} onChange={(e) => { setPasswordSecondInpu(e.target.value); }} placeholder=\"Confirm your password\" type=\"password\" />\n          {passwordStyle}\n          <FormControlLabel\n            control={<Checkbox name=\"checkedA\" onChange={() => { setAgree(true); }} checked={agree} />}\n            label=\"I accept the terms and conditions.\"\n          />\n          {agreeStyle}\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={(event) => { validate(event); handlePost(event); }} fullWidth>Sign up</Button>\n        </form>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default Signup;\n","/* eslint-disable react/jsx-filename-extension,react/forbid-component-props */\nimport React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport Login from '../components/login';\nimport Signup from '../components/signup';\n\n/**\n * Handles user login form and signup form\n *\n * @returns user login page\n */\nconst SignInOutContainer = () => {\n  document.getElementById('background-image').style.backgroundImage = 'url(https://t4.ftcdn.net/jpg/00/83/83/63/240_F_83836356_nfYi9d7pg9qFHrQKcAX61MNrSP4dOdW2.jpg)';\n  document.getElementById('background-image').style.opacity = '0.9';\n\n  const paperStyle = { width: 340, margin: '20px auto' };\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function TabPanel(props) {\n    const {\n      children, value, index, ...other\n    } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        { }\n        {value === index && (\n        <Box>\n          <Typography>{children}</Typography>\n        </Box>\n        )}\n      </div>\n    );\n  }\n\n  TabPanel.propTypes = {\n    children: PropTypes.func.isRequired,\n    value: PropTypes.func.isRequired,\n    index: PropTypes.func.isRequired,\n  };\n\n  return (\n    <div>\n      <div>\n        <Paper elevation={20} style={paperStyle}>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Sign In\" />\n            <Tab label=\"Sign Up\" />\n          </Tabs>\n          <TabPanel value={value} index={0}>\n            <Login handleChange={handleChange} />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Signup />\n          </TabPanel>\n        </Paper>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInOutContainer;\n","// eslint-disable-next-line\nexport const Bloods = [\r\n  {\n    value: 'A+',\n    label: 'A+',\n  }, {\n    value: 'A-',\n    label: 'A-',\n  }, {\n    value: 'AB+',\n    label: 'AB+',\n  }, {\n    value: 'AB-',\n    label: 'AB-',\n  }, {\n    value: 'B+',\n    label: 'B+',\n  }, {\n    value: 'B-',\n    label: 'B-',\n  }, {\n    value: 'O+',\n    label: 'O+',\n  }, {\n    value: 'O-',\n    label: 'O-',\n  },\n];\n\n// eslint-disable-next-line\nexport const Genders = [\r\n  {\n    value: 'male',\n    label: 'Male',\n  },\n  {\n    value: 'female',\n    label: 'Female',\n  },\n  {\n    value: 'others',\n    label: 'Others',\n  },\n];\n","/* eslint-disable react/jsx-filename-extension,react/forbid-dom-props,react/forbid-component-props */\nimport React, { useState } from 'react';\nimport {\n  Grid, Paper, Avatar, Typography, TextField, Button, MenuItem,\n} from '@material-ui/core';\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport instance from '../../firebase/instance';\nimport 'react-calendar/dist/Calendar.css';\nimport { Bloods, Genders } from '../../helpers/PatientInformation';\n\n/**\n * Loads Add patient form\n * \n * @returns Add patient content\n */\nconst AddPatient = () => {\n  const paperStyle = {\n    padding: 20, width: 300, margin: '0 auto', backgroundColor: 'rgba(239, 237, 236, 0.5)', boxShadow: '1px 5px 10px black',\n  };\n  const headerStyle = { margin: 0 };\n  const avatarStyle = { backgroundColor: '#1bbd7e' };\n  const [DiseaseStyle, setDiseaseStyle] = useState();\n  const [BloodStyle, setBloodStyle] = useState();\n  const [GenderStyle, setGenderStyle] = useState();\n  const [DOBStyle, setDOBStyle] = useState();\n  const [nameStyle, setNameStyle] = useState();\n  const [phoneStyle, setPhoneStyle] = useState();\n  const [success, setSuccess] = useState();\n\n  const [PatientDateOfBirth, setPatientDateOfBirth] = useState(new Date());\n  const [PatientName, setPatientName] = useState('');\n  const [PatientPhone, setPatientPhone] = useState('');\n  const [Disease, setDisease] = useState('');\n  const [Address, setAddress] = useState('');\n  const [bloodGroup, setBlood] = useState('');\n  const [gender, setGender] = useState('');\n\n  const handleDateChange = (date) => {\n    setPatientDateOfBirth(date);\n  };\n\n  const handleGenderChange = (e) => {\n    setGender(e.target.value);\n  };\n  const handleBloodChange = (e) => {\n    setBlood(e.target.value);\n  };\n\n  const validate = (e) => {\n    let i = 1;\n    e.preventDefault();\n    if (PatientName === '') {\n      i = 0;\n      setNameStyle(<div style={{ color: 'red' }}>Name is required</div>);\n    } else if (PatientName.length < 3) {\n      i = 0;\n      setNameStyle(<div style={{ color: 'red' }}>Name must have atleast 3 characters</div>);\n    } else if (!Number.isNaN(Number(PatientName))) {\n      i = 0;\n      setNameStyle(<div style={{ color: 'red' }}>Name should not be a number</div>);\n    } else {\n      setNameStyle('');\n    }\n\n    if (PatientPhone === '') {\n      i = 0;\n      setPhoneStyle(true);\n    } else if (PatientPhone.length !== 10) {\n      i = 0;\n      setPhoneStyle(<div style={{ color: 'red' }}>Please provide 10 digits phone number</div>);\n    } else if (Number.isNaN(Number(PatientPhone)) && PatientPhone.length === 10) {\n      i = 0;\n      setPhoneStyle(<div style={{ color: 'red' }}>Phone No.should be a number</div>);\n    } else {\n      setPhoneStyle('');\n    }\n\n    if (Disease.length === 0) {\n      i = 0;\n      setDiseaseStyle(true);\n    } else {\n      setDiseaseStyle('');\n    }\n    if (PatientDateOfBirth === '') {\n      i = 0;\n      setDOBStyle(true);\n    } else {\n      setDOBStyle('');\n    }\n    if (gender === '') {\n      i = 0;\n      setGenderStyle(true);\n    } else {\n      setGenderStyle('');\n    }\n    if (bloodGroup === '') {\n      i = 0;\n      setBloodStyle(true);\n    } else {\n      setBloodStyle('');\n    }\n    if (i === 1) {\n      const DateOfBirth = `${String(PatientDateOfBirth.getDate())}-${String(parseInt(PatientDateOfBirth.getMonth()) + 1)}-${String(PatientDateOfBirth.getFullYear())}`;\n      const Data = {\n        PatientName, PatientPhone, Address, gender, DateOfBirth, bloodGroup, Disease,\n      };\n      instance.get('/patients.json').then((resopnse) => {\n        for (const i in resopnse.data) {\n          if (resopnse.data[i].phone === PatientPhone) {\n            setSuccess(<div style={{ color: 'red' }}>User already exists  </div>);\n            e.preventDefault();\n            return;\n          }\n        }\n        instance.post('/patients.json', Data).then(() => {\n          setSuccess(<div style={{ color: 'green' }}>Successfully Added </div>);\n        }).catch(() => {\n          setSuccess(<div style={{ color: 'red' }}>Sorry... Something went wrong</div>);\n        });\n      }).catch(() => {\n        setSuccess(<div colSpan=\"10\" style={{ textAlign: 'center', color: 'red', fontSize: '20px' }}>Something went wrong!!!</div>);\n      });\n    }\n  };\n\n  return (\n    <Grid align=\"center\">\n      <Paper style={paperStyle} className=\"popup\">\n        <Grid align=\"center\">\n          <Avatar style={avatarStyle}>\n            <AddCircleOutlineOutlinedIcon />\n          </Avatar>\n          <h2 style={headerStyle}>Add Patient</h2>\n          {success}\n          <Typography variant=\"caption\" gutterBottom />\n        </Grid>\n        <form>\n          <TextField fullWidth required label=\"Name\" error={nameStyle} name=\"PatientName\" onChange={(e) => { setPatientName(e.target.value); }} placeholder=\"Enter your name\" />\n          <TextField fullWidth required error={phoneStyle} label=\"Phone Number\" name=\"PatientPhone\" onChange={(e) => { setPatientPhone(e.target.value); }} placeholder=\"Enter your phone number\" />\n          {phoneStyle}\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n            <KeyboardDatePicker\n              required\n              value={PatientDateOfBirth}\n              format=\"dd/MM/yyyy\"\n              onChange={handleDateChange}\n              label=\"Birth Date\"\n              showTodayButton\n              fullWidth\n              error={DOBStyle}\n            />\n          </MuiPickersUtilsProvider>\n          <TextField\n            fullWidth\n            required\n            id=\"gender\"\n            select\n            label=\"Gender\"\n            value={gender}\n            onChange={handleGenderChange}\n            variant=\"standard\"\n            align=\"left\"\n            error={GenderStyle}\n          >\n            {Genders.map(option => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n          <br />\n          <TextField\n            fullWidth\n            required\n            id=\"blood\"\n            select\n            label=\"Blood Group\"\n            value={bloodGroup}\n            onChange={handleBloodChange}\n            variant=\"standard\"\n            align=\"left\"\n            error={BloodStyle}\n          >\n            {Bloods.map(option => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField fullWidth label=\"Address\" id=\"address\" onChange={(e) => { setAddress(e.target.value); }} type=\"text\" />\n          <TextField fullWidth error={DiseaseStyle} required label=\"Disease Name\" id=\"disease\" onChange={(e) => { setDisease(e.target.value); }} type=\"text\" />\n          <br />\n          <Typography variant=\"caption\" gutterBottom><br /></Typography>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={(event) => { validate(event); }}>Add</Button>\n        </form>\n      </Paper>\n    </Grid>\n  );\n};\n\nexport default AddPatient;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nconst HomeContent = () => (\n  <div>\n    <h2>Home Content</h2>\n    Hii\n    {' '}\n    {localStorage.getItem('PatientName')}\n    .!\n    <br />\n    Here\n    You can add and\n    update patient details.\n  </div>\n);\n\nexport default HomeContent;\n","/* eslint-disable react/jsx-filename-extension,react/button-has-type,react/forbid-dom-props */\nimport React, { useState } from 'react';\nimport { Button, TextField, MenuItem } from '@material-ui/core';\nimport './patient.css';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport instance from '../../firebase/instance';\nimport { Bloods, Genders } from '../../helpers/PatientInformation';\n\n/**\n * Loads Patient table list for update patient and delete \n * \n * @returns Patient List\n */\nconst PatientList = () => {\n  const [namelist, setNameList] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [updateForms, setUpdateForms] = useState('');\n\n  /**\n   * Update Patient data\n   * \n   * @param {String} id represnts unique identity of patient\n   */\n  function updateForm(id) {\n    instance.get(`/patients/${id}.json`).then((res) => {\n      const data = [];\n      const handleDateChange = (date) => {\n        data.DateOfBirth = date;\n      };\n      const handleBloodChange = (e) => {\n        data.bloodGroup = e.target.value;\n      };\n      const handleGenderChange = (e) => {\n        data.gender = e.target.value;\n      };\n      if (res.status === 200) {\n        for (const i in res.data) { // eslint-disable-line\n          data[i] = res.data[i];\n        }\n        const [day, month, year] = res.data.DateOfBirth.split('-');\n        const ndate = `${year}-${month}-${day}`;\n        data.DateOfBirth = new Date(ndate);\n        setUpdateForms(\n          <>\n            <form className=\"form-container form-popup\" id=\"myForm\">\n              <center><h2>Update</h2></center>\n              <TextField fullWidth required label=\"Name\" defaultValue={data.PatientName} name=\"PatientName\" onChange={(e) => { data.PatientName = e.target.value; }} placeholder=\"Enter your name\" />\n              <TextField fullWidth required defaultValue={data.PatientPhone} label=\"Phone Number\" name=\"PatientPhone\" onChange={(e) => { data.PatientPhone = e.target.value; }} placeholder=\"Enter your phone number\" />\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  required\n                  defaultValue={new Date(ndate)}\n                  format=\"dd/MM/yyyy\"\n                  onChange={handleDateChange}\n                  label=\"Birth Date\"\n                  showTodayButton\n                  fullWidth\n                />\n              </MuiPickersUtilsProvider>\n              <TextField\n                fullWidth\n                required\n                id=\"blood\"\n                select\n                label=\"Blood Group\"\n                defaultValue={data.bloodGroup}\n                onChange={(e) => { data.bloodGroup = e.target.value; handleBloodChange(e); }}\n                variant=\"standard\"\n                align=\"left\"\n              >\n                {Bloods.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                fullWidth\n                required\n                id=\"gender\"\n                select\n                label=\"Gender\"\n                defaultValue={data.gender}\n                onChange={(e) => { data.gender = e.target.value; handleGenderChange(e); }}\n                variant=\"standard\"\n                align=\"left\"\n              >\n                {Genders.map(option => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField fullWidth label=\"Address\" defaultValue={data.Address} id=\"address\" onChange={(e) => { data.Address = e.target.value; }} type=\"text\" />\n               {/* eslint-disable-line */}\n              <TextField fullWidth defaultValue={data.Disease} required label=\"Disease Name\" id=\"disease\" onChange={(e) => { data.Disease = e.target.value; }} type=\"text\" />\n              <button onClick={(e) => { e.preventDefault(); setUpdateForms(''); submitForm(id, data); }} className=\"btn\">Update</button> {/* eslint-disable-line */}\n              <button className=\"btn cancel\" onClick={(e) => { setUpdateForms(''); e.preventDefault(); }}>Close</button>\n            </form>\n          </>,\n        );\n      }\n    });\n  }\n\n  /**\n   * Fetch and append data to table based on Patient name default is ''\n   */\n  const getLists = () => {\n    instance.get('/patients.json').then((response) => {\n      const listofname = [];\n      let j = 0;\n      setNameList([]);\n\n      async function removePatient(e, event) {\n        event.preventDefault();\n        await instance.delete(`/patients/${e}.json`).then(() => {\n        }).catch(() => {\n          alert('Something went Wrong');\n        });\n        getLists('');\n      }\n\n      for (const i in response.data) { // eslint-disable-line\n        j += 1;\n        if ((String(response.data[i].PatientName).toLowerCase()).includes(searchText.toLowerCase()) || searchText === '') {\n          listofname.push(\n            <tr id={i} style={{ padding: '15px', minHeight: '50px' }} className=\"trow\">\n              <td className=\"searchtd\" style={{ width: '10px' }}>{j}</td>\n              <td className=\"searchtd\">{response.data[i].PatientName}</td>\n              <td className=\"searchtd\">{response.data[i].PatientPhone}</td>\n              <td className=\"searchtd\">{response.data[i].DateOfBirth}</td>\n              <td className=\"searchtd\" style={{ width: '15px' }}>{response.data[i].bloodGroup}</td>\n              <td className=\"searchtd\" style={{ width: '20px' }}>{response.data[i].gender}</td>\n              <td className=\"searchtd\">{response.data[i].Address}</td>\n              <td className=\"searchtd\">{response.data[i].Disease}</td>\n              <td className=\"searchtd\">\n                <form action=\"/patient\">\n                  <Button fullWidth onClick={() => { updateForm(i); }} id=\"updateBtn\">Update</Button>\n                </form>\n              </td>\n              <td className=\"searchtd\">\n                <form action=\"/patient\">\n                  <Button fullWidth onClick={event => removePatient(i, event)} id=\"deleteBtn\">Delete</Button>\n                </form>\n              </td>\n            </tr>,\n          );\n        }\n      }\n      if (listofname === [] || listofname.length === 0) {\n        listofname.push(<tr><td colSpan={10} style={{ textAlign: 'center', color: 'red', fontSize: '20px' }}>Result not found</td></tr>);\n      }\n      setNameList(listofname);\n    }).catch(() => {\n      setNameList(<tr><td colSpan={10} style={{ textAlign: 'center', color: 'red', fontSize: '20px' }}>Something went wrong!!!</td></tr>);\n    });\n  };\n\n  function submitForm(id, data) {\n    const DateOfBirth = `${String(data.DateOfBirth.getDate())}-${String(parseInt(data.DateOfBirth.getMonth()) + 1)}-${String(data.DateOfBirth.getFullYear())}`;\n    instance.put(`/patients/${id}.json`, {\n      PatientName: data.PatientName,\n      Address: data.Address,\n      DateOfBirth,\n      Disease: data.Disease,\n      PatientPhone: data.PatientPhone,\n      bloodGroup: data.bloodGroup,\n      gender: data.gender,\n    }).then((response) => {\n      if (response.status !== 200) {\n        alert('Something went Wrong');\n      }\n      return response.status;\n    }).catch(() => {\n      alert('Something went Wrong');\n    });\n    getLists('');\n  }\n\n  const [flag, setFlag] = useState(1);\n  if (searchText === '' && flag === 1) {\n    getLists('');\n    setFlag(0);\n  }\n\n  return (\n    <div>\n      <div className=\"nav-content-no right\">\n        <input style={{ height: '25px' }} onChange={(e) => { setFlag(1); setSearchText(e.target.value); getLists(e.target.value); }} className=\"searchbar\" type=\"text\" placeholder=\"Search\" id=\"searchbar\" />\n        <></>\n        {' '}\n        <i className=\"fa fa-search\" style={{ color: 'black' }} />\n        <br />\n      </div>\n      <table id=\"3\" className=\"searchtable\">\n        <tbody>\n          <tr className=\"searchthead\">\n            <td style={{ padding: '15px', minHeight: '50px' }}>Sl No</td>\n            <td style={{ padding: '15px', minHeight: '50px' }}>Name</td>\n            <td style={{ padding: '15px', minHeight: '50px' }}>Phone</td>\n            <td style={{ padding: '15px', minHeight: '50px' }}>Date of Birth</td>\n            <td style={{ padding: '15px', minHeight: '50px' }}>Blood Group</td>\n            <td style={{ padding: '15px', minHeight: '50px' }}>Gender</td>\n            <td style={{ padding: '15px', minHeight: '50px' }}>Address</td>\n            <td style={{ padding: '15px', minHeight: '50px' }}>Disease</td>\n            <td style={{ padding: '15px', minHeight: '50px' }}>Update</td>\n            <td style={{ padding: '15px', minHeight: '50px' }}>Remove</td>\n          </tr>\n          {namelist}\n        </tbody>\n      </table>\n      {updateForms}\n    </div>\n  );\n};\n\nexport default PatientList;\n","/* eslint-disable react/jsx-filename-extension,jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions */\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport './patient.css';\nimport AddPatient from './addPatient';\nimport HomeContent from './HomeContent';\nimport PatientList from './updatePatient';\n\n/**\n * Loads Patient home page,Add patient form and Patient table\n * \n * @returns Patient home content \n */\nconst PatientHome = () => {\n  const navigate = useNavigate();\n  const PatientName = localStorage.getItem('PatientName');\n  const [patientForm, setPatientForm] = useState(<HomeContent />);\n\n  async function Forms(e) {\n    if (e === 0) {\n      setPatientForm(<HomeContent />);\n    } else if (e === 1) {\n      setPatientForm(<AddPatient />);\n    } else if (e === 2) {\n      setPatientForm(<PatientList />);\n    }\n  }\n\n  if (PatientName === undefined || PatientName === null) {\n    window.location.href = '/';\n  }\n  const logout = () => {\n    localStorage.removeItem('PatientName');\n    navigate('/');\n  };\n\n  return (\n    <div>\n      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n      <div className=\"nav-bar\">\n        <div className=\"nav\">\n          <div className=\"nav-item\">\n            <div className=\"left\">\n              <div className=\"nav-content left\" onClick={() => { Forms(0); }}>\n                <i className=\"fa fa-home\" />\n                {' '}\n                Home\n              </div>\n              <div className=\"nav-content left \" onClick={() => { Forms(1); }}>\n                <i className=\"fa fa-plus\" />\n                {' '}\n                Add Patient\n              </div>\n              <div className=\"nav-content left\" onClick={() => { Forms(2); }}>\n                <i className=\"fa fa-edit\" />\n                {' '}\n                View/Update Patient\n              </div>\n            </div>\n            <div className=\"right\">\n              <div className=\"nav-content right\" onClick={() => logout()}>\n                <i className=\"fa fa-lock\" />\n                {' '}\n                | Logout\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <hr />\n      <div className=\"content\">\n        {patientForm}\n        <br />\n      </div>\n    </div>\n  );\n};\n\nexport default PatientHome;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\n\nconst NotFound = () => {\n  const navigate = useNavigate();\n  const gohome = () => {\n    navigate('/');\n  };\n  return (\n    <div>\n      <center>\n        <h1>404 - Page Not Found...!</h1>\n        <Button onClick={gohome}> Goto Home</Button>\n      </center>\n    </div>\n  );\n};\n\nexport default NotFound;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * Handles unusual behaviour\n * \n * @returns error content\n */\nconst SomethinWentWrong = () => {\n  const navigate = useNavigate();\n  const gohome = () => {\n    navigate('/');\n  };\n  return (\n    <div>\n      <center>\n        <h1>Sorry, Something went wrong!</h1>\n        <Button onClick={gohome}> Goto Home</Button>\n      </center>\n    </div>\n  );\n};\n\nexport default SomethinWentWrong;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport SignInOutContainer from './containers';\nimport PatientHome from './components/Patient/home';\nimport NotFound from './NotFound';\nimport SomethinWentWrong from './error';\n\n/**\n * Routes patient home page,login form and error handling pages\n * \n * @returns routes url paths\n */\nconst App = () => (\n  <div className=\"App\">\n    <BrowserRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<SignInOutContainer />} />\n        <Route exact path=\"/patient\" element={<PatientHome />} />\n        <Route exact path=\"/Error\" element={<SomethinWentWrong />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </BrowserRouter>\n  </div>\n);\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}